<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>韩若熙</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://hanxiaoluo.site/"/>
  <updated>2016-09-24T08:09:04.000Z</updated>
  <id>http://hanxiaoluo.site/</id>
  
  <author>
    <name>韩若熙</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用hexo在github上搭建个人博客</title>
    <link href="http://hanxiaoluo.site/2016/09/20/%E4%BD%BF%E7%94%A8hexo%E5%9C%A8github%E4%B8%8A%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://hanxiaoluo.site/2016/09/20/使用hexo在github上搭建个人博客/</id>
    <published>2016-09-20T13:39:37.000Z</published>
    <updated>2016-09-24T08:09:04.000Z</updated>
    
    <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><br>+<a id="more"></a></excerpt></p>
<the rest="" of="" contents="" |="" 余下全文="">

<p>#1、安装node.js</p>
<p>　　node.js官网地址：<a href="https://nodejs.org/en/" target="_blank" rel="external">https://nodejs.org/en/</a><br>下载最新版的node.js进行逐步安装即可。</p>
<p>#2、安装git</p>
<p>　　下载git客户端，指定安装目录进行安装。以后所有的git命令都是在git-bash中进行。</p>
<p>#3、申请github账号</p>
<p>　　github官网地址：<a href="https://github.com/" target="_blank" rel="external">https://github.com/</a><br>输入账号、密码进行注册。</p>
<p>　　注册完成后，点击“New repository”创建新的仓库，注意个人主页的仓库名要与你的用户名相同。</p>
<p>　　至于SSH Keys，看你自己了，可以不配置，不配置的话以后每一次对自己的博客有改动提交的时候就要手动输入账号密码，配置后就不需要了。怎麽配置这里就不说了，网上很多教程。</p>
<p>#4、使用npm安装hexo</p>
<p>　　完成node.js和git的安装后，我们进行hexo的安装。首先创建一个本地文件夹，如myhexo，进入该目录，执行如下命令安装,命令：<strong>sudo npm install -g hexo</strong></p>
<p>　　完成后，执行如下命令进行初始化,命令：<strong>sudo hexo init</strong></p>
<p>　　至此hexo的安装工作全部完成，myhexo就是你的博客根目录，所有的博客操作都在里面进行。</p>
<p>　　生成静态页面至public目录的命令：<strong>sudo hexo generate</strong>(<em>hexo g</em> 也可以)</p>
<p>将.deploy目录部署到github的命令：<strong>sudo hexo deploy</strong>(<em>hexo d</em> 也可以)</p>
<p>　　开启预览访问端口的命令：<strong>sudo hexo server</strong>(<em>hexo s </em>也可以)，默认端口为<em>4000</em>，浏览器输入<a href="http://localhost:4000]" target="_blank" rel="external">http://localhost:4000</a>，即可看到我们的博客主页。</p>
<p>　　配置github，目的是使用自己的github账户访问，比如<strong><em><a href="http://hanxiaoluo.github.io" target="_blank" rel="external">http://hanxiaoluo.github.io</a></em></strong>,<br>   我的博客在myhexo目录中，该目录里面有一个叫做——config.yml的文件，我们需要修改此文件。翻到最后，修改如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy: </div><div class="line"><span class="built_in">type</span>: git </div><div class="line">repo: git@github.com:hanxiaoluo/hanxiaoluo.github.io.git</div><div class="line">branch: master</div></pre></td></tr></table></figure>
<p>  然后执行以下命令：</p>
<p>  <strong>sudo npm install hexo-deployer-git –save</strong></p>
<p>  <strong>sudo hexo deploy</strong></p>
<p>  部署步骤：<br>  每次部署的步骤，可按以下三部来进行:</p>
<p>  <strong>sudo hexo clean</strong></p>
<p>  <strong>sudo hexo g</strong></p>
<p>  <strong>sudo hexo d</strong> </p>
<p>  至此，准备工作全部完成了。我们在浏览器输入<strong><em><a href="http://github.com/hanxiaoluo.github.io" target="_blank" rel="external">http://github.com/hanxiaoluo.github.io</a></em></strong><br>即可访问我的博客啦。此时博客的主题为默认主题。我们可以修改博客主题。</p>
<p>#5、绑定自己的域名</p>
<p>　　要想将博客与我们的域名绑定，首先我们要拥有自己的域名。百度搜索阿里云，进入阿里云官网，申请域名。<strong>这里要注意一些域名是不能在国内备案的，比如我申请的.site域名，就不能在国内备案（其他能备案的域名我也没有备案过，据说比较麻烦）。</strong>所以我把博客部署到了github，当然如果你有境外服务器那更好。</p>
<p>　　申请好域名，就可以解析啦。添加下面两条记录，注意记录类型和主机记录，记录值填写github的IP地址。</p>
<p>  <img src="http://odsh9s4s2.bkt.clouddn.com/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90.png" alt="域名解析"></p>
<p>  可以通过<strong>ping <em><a href="http://hanxiaoluo.github.io" target="_blank" rel="external">http://hanxiaoluo.github.io</a></em></strong><br>  获得该IP地址。</p>
<p>　　到这里我们在浏览器输入域名去访问博客，会出现404错误。我们还差一个CNAME文件，这个文件需要我们提交到github仓库。文件的内容就是你的域名，比如我的：<em>www.hanxiaoluo.site</em> 提交完，我们再在浏览器输入域名，就可以直接访问我的博客啦。</p>
<p>#6、总结</p>
<p>　　到此为止，我们已经完成整个博客在github上的搭建，同时实现了域名绑定。搭建过程中，建议大家多学习git及hexo命令的使用。这些在后面的文章中，我们都会提到。</p>
</the>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;Excerpt in index | 首页摘要&gt;&lt;br&gt;+
    
    </summary>
    
    
      <category term="hexo" scheme="http://hanxiaoluo.site/tags/hexo/"/>
    
      <category term="github" scheme="http://hanxiaoluo.site/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>git在qtcreator中的使用</title>
    <link href="http://hanxiaoluo.site/2016/09/20/git%E5%9C%A8qtcreator%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://hanxiaoluo.site/2016/09/20/git在qtcreator中的使用/</id>
    <published>2016-09-20T13:39:34.000Z</published>
    <updated>2016-09-20T13:56:25.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、安装git"><a href="#1、安装git" class="headerlink" title="1、安装git"></a>1、安装git</h1><p>　　官网下载相应的git版本，安装即可。记下git.exe的路径，比如我的git路径为：<strong>D:\Git\Git\bin</strong></p>
<p><excerpt in="" index="" |="" 首页摘要=""><br>+<a id="more"></a></excerpt></p>
<the rest="" of="" contents="" |="" 余下全文="">

<h1 id="2、在IDE中设置git路径"><a href="#2、在IDE中设置git路径" class="headerlink" title="2、在IDE中设置git路径"></a>2、在IDE中设置git路径</h1><p>　　双击qtcreator运行，依次点击<strong>工具-选项-版本控制-Git</strong>，弹出如下界面:</p>
<p><img src="http://odsh9s4s2.bkt.clouddn.com/qtcreatorgitset.png" alt="配置git路径"></p>
<p>　　在“附加在系统PATH之前”后面的编辑框填写第一步获取到的git路径。</p>
<h1 id="3、使用IDE新建工程"><a href="#3、使用IDE新建工程" class="headerlink" title="3、使用IDE新建工程"></a>3、使用IDE新建工程</h1><p>　　前面的建立过程此处不做详细介绍，与普通的qt工程建立相同。需要注意的是，工程建立最后一步，在“添加到版本控制系统”后面我们需要选中Git,然后点击“完成”即可。</p>
<h1 id="4、本地仓库绑定github"><a href="#4、本地仓库绑定github" class="headerlink" title="4、本地仓库绑定github"></a>4、本地仓库绑定github</h1><p>　　打开我们新建立的qt工程文件夹(即.pro文件所在文件夹)，鼠标右键点击，进入git命令行。执行如下命令：</p>
<p><strong>git remote add origin <a href="https://github.com/han/myqtCreator" target="_blank" rel="external">https://github.com/han/myqtCreator</a></strong></p>
<p>完成本地仓库与github远程仓库的绑定。</p>
<h1 id="5、建立分支"><a href="#5、建立分支" class="headerlink" title="5、建立分支"></a>5、建立分支</h1><p>　　由于在项目开发过程中，需要所有的开发人员团队合作，我们为每一个开发人员分配自己的分支，相应的我们需要建立自己的本地分支(相关git的知识可自行去学习)。在命令行下执行如下命令：</p>
<p><strong>git checkout -b gh-pages origin/gh-pages</strong></p>
<p>此时可能会出现牵出远程分支错误，如下：</p>
<p>fatal: Cannot update paths and switch to branch ‘develop’ at the same time.<br>Did you intend to checkout ‘origin/develop’ which can not be resolved as commit? </p>
<p>解决方法：</p>
<p><strong>git fetch</strong></p>
<p><strong>git checkout -b gh-pages origin/gh-pages</strong></p>
<h1 id="6、git上传"><a href="#6、git上传" class="headerlink" title="6、git上传"></a>6、git上传</h1><p>　　如前面文章所讲，依次执行如下命令：</p>
<p><strong>git add .</strong></p>
<p><strong>git commit -m “注释”</strong></p>
<p><strong>git push -u origin gh-pages</strong></p>
<p>可以看到本地分支上的源码已经上传到远程分支。</p>
<h1 id="7、qtcreator直接上传源码到github分支"><a href="#7、qtcreator直接上传源码到github分支" class="headerlink" title="7、qtcreator直接上传源码到github分支"></a>7、qtcreator直接上传源码到github分支</h1><p>　　我们对工程源码进行修改，比如添加打印信息：qDebug()&lt;&lt;”hello”;<br>修改完成，在菜单栏找到<strong>工具-Git-Local Repository -Commit</strong>，填写作者、邮箱、描述。右侧选中被修改的文件，点击“commit”按钮，完成提交。<br>　　我们此时观察到github远程仓库的代码已经更新，说明我们的源码修改已经被成功上传。</p>
</the>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1、安装git&quot;&gt;&lt;a href=&quot;#1、安装git&quot; class=&quot;headerlink&quot; title=&quot;1、安装git&quot;&gt;&lt;/a&gt;1、安装git&lt;/h1&gt;&lt;p&gt;　　官网下载相应的git版本，安装即可。记下git.exe的路径，比如我的git路径为：&lt;strong&gt;D:\Git\Git\bin&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;Excerpt in index | 首页摘要&gt;&lt;br&gt;+
    
    </summary>
    
    
      <category term="gitlab" scheme="http://hanxiaoluo.site/tags/gitlab/"/>
    
      <category term="qtcreator" scheme="http://hanxiaoluo.site/tags/qtcreator/"/>
    
  </entry>
  
  <entry>
    <title>代码管理之gitlab的使用</title>
    <link href="http://hanxiaoluo.site/2016/09/19/gitlab%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://hanxiaoluo.site/2016/09/19/gitlab的使用/</id>
    <published>2016-09-19T13:28:32.000Z</published>
    <updated>2016-09-20T14:24:34.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、安装git"><a href="#1、安装git" class="headerlink" title="1、安装git"></a>1、安装git</h1><p>　　下载git客户端，指定目录进行安装。安装完毕，右键菜单，可以看到Git Bash Here 菜单项。</p>
<p><excerpt in="" index="" |="" 首页摘要=""><br>+<a id="more"></a></excerpt></p>
<the rest="" of="" contents="" |="" 余下全文="">

<h1 id="2、建立远程分支"><a href="#2、建立远程分支" class="headerlink" title="2、建立远程分支"></a>2、建立远程分支</h1><p>　　输入用户名及密码，进入gitlab，在“你的项目”中可以看到我们要参与的项目。点击项目名称，可以看到项目信息。在页面上方，我们找到“仓库”，点击进入。此时就可以看到整个项目的源码。</p>
<p>　 点击项目名称右侧的“+”，点击“New branch”，建立我们自己的分支，比如我的为tao.zhang,建立完毕，在项目名称左侧的下拉菜单，可以看到我们的分支，选中tao.zhang分支，可以看到该分支下的源码。</p>
<p>　　此时tao.zhang分支下的内容与master分支下内容是一样的。</p>
<h1 id="3、建立本地仓库"><a href="#3、建立本地仓库" class="headerlink" title="3、建立本地仓库"></a>3、建立本地仓库</h1><p>　　在自己的电脑E盘，建立名字为mygitlab的文件夹，进入该文件夹，右键菜单，点击“Git Bash Here”，进入命令行。执行如下命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> http://gitlab服务器IP地址/project.admin/Gemini</div></pre></td></tr></table></figure>
<p>　　其中gitlab服务器IP地址根据自己的服务器IP地址而定。克隆下来默认为master分支，所以我们在文件夹里面看到的是master分支对应的内容。</p>
<h1 id="4、建立本地分支"><a href="#4、建立本地分支" class="headerlink" title="4、建立本地分支"></a>4、建立本地分支</h1><p>　　在命令行下输入<strong>cd Gemini</strong>进入Gemini文件夹下，执行如下命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout -b tao.zhang origin/tao.zhang</div></pre></td></tr></table></figure>
<p>我们此时观察本地Gemini文件夹下的内容，对应的才是我们远程分支下的内容。</p>
<h1 id="5、上传到远程分支"><a href="#5、上传到远程分支" class="headerlink" title="5、上传到远程分支"></a>5、上传到远程分支</h1><p>　　进入命令行执行如下命令：</p>
<p><strong>git add .</strong>  //其中，git add .表示上传所有的文件，而git add 1.txt表示只上传文件1.txt</p>
<p><strong>git commit -m “注释”</strong> //其中，双引号之内的内容表示操作注释，方便代码管理。</p>
<p><strong>git push origin tao.zhang</strong> //该命令表示将内容真正上传到远程分支。</p>
<p>　　此时在远程分支，我们会看到我们上传的文件。</p>
</the>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1、安装git&quot;&gt;&lt;a href=&quot;#1、安装git&quot; class=&quot;headerlink&quot; title=&quot;1、安装git&quot;&gt;&lt;/a&gt;1、安装git&lt;/h1&gt;&lt;p&gt;　　下载git客户端，指定目录进行安装。安装完毕，右键菜单，可以看到Git Bash Here 菜单项。&lt;/p&gt;
&lt;p&gt;&lt;Excerpt in index | 首页摘要&gt;&lt;br&gt;+
    
    </summary>
    
    
      <category term="gitlab" scheme="http://hanxiaoluo.site/tags/gitlab/"/>
    
      <category term="markdown" scheme="http://hanxiaoluo.site/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Hello</title>
    <link href="http://hanxiaoluo.site/2016/09/16/hello-world/"/>
    <id>http://hanxiaoluo.site/2016/09/16/hello-world/</id>
    <published>2016-09-16T09:12:45.000Z</published>
    <updated>2016-09-19T14:07:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<p><excerpt in="" index="" |="" 首页摘要=""><br>+<a id="more"></a></excerpt></p>
<the rest="" of="" contents="" |="" 余下全文="">

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
</the>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;Excerpt in index | 首页摘要&gt;&lt;br&gt;+
    
    </summary>
    
    
      <category term="markdown" scheme="http://hanxiaoluo.site/tags/markdown/"/>
    
      <category term="hexo" scheme="http://hanxiaoluo.site/tags/hexo/"/>
    
  </entry>
  
</feed>
